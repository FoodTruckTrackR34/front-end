[{"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/index.js":"1","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/reportWebVitals.js":"2","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/App.js":"3","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/RegisterForm.js":"4","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/NavBar.js":"5","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/OperatorDash.js":"6","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/LoginForm.js":"7","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/Footer.js":"8","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/SecureOpRoute.js":"9","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/validation/dinerFormSchema.js":"10","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/SecureDinerRoute.js":"11","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/DinerDash.js":"12","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/validation/operatorFormSchema.js":"13","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/menu/Menu.js":"14","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/contexts/UserContext.js":"15","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/contexts/TrucksContext.js":"16","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/Trucks.js":"17","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/SearchBar.js":"18","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/OperatorProfile.js":"19","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/validation/loginFormSchema.js":"20","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/DinerProfile.js":"21","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/menu/MenuItem.js":"22","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/utils/axiosWithAuth.js":"23","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/TruckCard.js":"24","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/dummy-data/users.js":"25"},{"size":543,"mtime":1612560155898,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1612560155898,"results":"28","hashOfConfig":"27"},{"size":7375,"mtime":1612560155895,"results":"29","hashOfConfig":"27"},{"size":8955,"mtime":1612560155896,"results":"30","hashOfConfig":"27"},{"size":1726,"mtime":1612563083062,"results":"31","hashOfConfig":"27"},{"size":2002,"mtime":1612560155896,"results":"32","hashOfConfig":"27"},{"size":5048,"mtime":1612560155896,"results":"33","hashOfConfig":"27"},{"size":551,"mtime":1612560155896,"results":"34","hashOfConfig":"27"},{"size":382,"mtime":1612560155897,"results":"35","hashOfConfig":"27"},{"size":636,"mtime":1612560155899,"results":"36","hashOfConfig":"27"},{"size":385,"mtime":1612560155897,"results":"37","hashOfConfig":"27"},{"size":2977,"mtime":1612560155896,"results":"38","hashOfConfig":"27"},{"size":614,"mtime":1612560155899,"results":"39","hashOfConfig":"27"},{"size":9105,"mtime":1612560155897,"results":"40","hashOfConfig":"27"},{"size":207,"mtime":1612560155897,"results":"41","hashOfConfig":"27"},{"size":84,"mtime":1612560155897,"results":"42","hashOfConfig":"27"},{"size":1026,"mtime":1612560155897,"results":"43","hashOfConfig":"27"},{"size":3699,"mtime":1612560155897,"results":"44","hashOfConfig":"27"},{"size":11362,"mtime":1612560155896,"results":"45","hashOfConfig":"27"},{"size":346,"mtime":1612560155899,"results":"46","hashOfConfig":"27"},{"size":2809,"mtime":1612560155896,"results":"47","hashOfConfig":"27"},{"size":2727,"mtime":1612560155897,"results":"48","hashOfConfig":"27"},{"size":280,"mtime":1612561595724,"results":"49","hashOfConfig":"27"},{"size":4660,"mtime":1612560155897,"results":"50","hashOfConfig":"27"},{"size":3430,"mtime":1612560155898,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"rmxe0y",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/index.js",[],["113","114"],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/reportWebVitals.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/App.js",["115"],"import \"./App.css\";\nimport React, { useState, useEffect} from \"react\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport { Switch, Route, useHistory, useParams } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport dinerSchema from \"./validation/dinerFormSchema\";\nimport operatorSchema from \"./validation/operatorFormSchema\";\nimport axios from \"axios\";\nimport DinerDash from \"./components/DinerDash\";\nimport OperatorDash from \"./components/OperatorDash\";\nimport NavBar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\n\nimport { SecureOpRoute } from \"./components/SecureOpRoute\";\nimport { SecureDinerRoute } from \"./components/SecureDinerRoute\";\n//import { axiosWithAuth } from \"./utils/axiosWithAuth\";\n\nimport styled from \"styled-components\";\n//import Logout from \"./utils/Logout\";\nimport Menu from \"./components/menu/Menu\";\nimport {UserContext} from './contexts/UserContext'\n\n\nconst initialUsers = [];\n\nconst initialDinerFormValues = {\n  dinerUsername: \"\",\n  dinerEmail: \"\",\n  dinerPassword: \"\",\n  dinerConfirmPassword: \"\",\n  dinerZipcode: \"\",\n};\n\nconst initialDinerFormErrors = {\n  dinerUsername: \"\",\n  dinerEmail: \"\",\n  dinerPassword: \"\",\n  dinerConfirmPassword: \"\",\n};\n\nconst initialOperatorFormValues = {\n  operatorUsername: \"\",\n  operatorEmail: \"\",\n  operatorPassword: \"\",\n  operatorConfirmPassword: \"\",\n};\n\nconst initialOperatorFormErrors = {\n  operatorUsername: \"\",\n  operatorEmail: \"\",\n  operatorPassword: \"\",\n  operatorConfirmPassword: \"\",\n};\n\nconst initialDinerDisabled = true;\nconst initialOperatorDisabled = true;\n\nfunction App() {\n // const {id} = useParams();\n  const history = useHistory();\n  const [users, setUsers] = useState(initialUsers);\n  const [dinerFormValues, setDinerFormValues] = useState(\n    initialDinerFormValues\n  );\n  const [dinerFormErrors, setDinerFormErrors] = useState(\n    initialDinerFormErrors\n  );\n  const [operatorFormValues, setOperatorFormValues] = useState(\n    initialOperatorFormValues\n  );\n  const [operatorFormErrors, setOperatorFormErrors] = useState(\n    initialOperatorFormErrors\n  );\n  const [dinerButton, setDinerButton] = useState(initialDinerDisabled);\n  const [operatorButton, setOperatorButton] = useState(initialOperatorDisabled);\n  const [currentUser, setCurrentUser] = useState({})\n  const [menus, setMenus] = useState([])\n  const [trucks, setTrucks] = useState([])\n  const [currentTruck, setCurrentTruck] = useState({})\n\n  const dinerInputChange = (name, value) => {\n    yup\n      .reach(dinerSchema, name)\n      .validate(value)\n      .then(() => {\n        setDinerFormErrors({\n          ...dinerFormErrors,\n          [name]: \"\",\n        });\n      })\n      .catch((err) => {\n        setDinerFormErrors({\n          ...dinerFormErrors,\n          [name]: err.errors[0],\n        });\n      });\n\n    setDinerFormValues({\n      ...dinerFormValues,\n      [name]: value,\n    });\n  };\n\n  useEffect(() => {\n    dinerSchema.isValid(dinerFormValues).then((valid) => {\n      setDinerButton(!valid);\n    });\n  }, [dinerFormValues]);\n\n  const operatorInputChange = (name, value) => {\n    yup\n      .reach(operatorSchema, name)\n      .validate(value)\n      .then(() => {\n        setOperatorFormErrors({\n          ...operatorFormErrors,\n          [name]: \"\",\n        });\n      })\n      .catch((err) => {\n        setOperatorFormErrors({\n          ...operatorFormErrors,\n          [name]: err.errors[0],\n        });\n      });\n\n    setOperatorFormValues({\n      ...operatorFormValues,\n      [name]: value,\n    });\n  };\n\n  useEffect(() => {\n    operatorSchema.isValid(operatorFormValues).then((valid) => {\n      setOperatorButton(!valid);\n    });\n  }, [operatorFormValues]);\n\n  const dinerFormSubmit = () => {\n    const newDiner = {\n      username: dinerFormValues.dinerUsername.trim(),\n      email: dinerFormValues.dinerEmail.trim(),\n      password: dinerFormValues.dinerPassword.trim(),\n      role: \"diner\",\n    };\n\n    setUsers([...users, newDiner]);\n    setDinerFormValues(initialDinerFormValues);\n    postNewDiner(newDiner);\n  };\n\n  const postNewDiner = (newDiner) => {\n    axios\n      .post(\n        \"https://food-truck-back-end-lambda.herokuapp.com/api/auth/register\",\n        newDiner\n      )\n      .then((res) => {\n        console.log(res);\n        //localStorage.setItem('token', res.data.payload);\n        history.push(\"/login-form\"); //unless we can get token\n        //setDinerFormValues(initialDinerFormValues);\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n\n  const operatorFormSubmit = () => {\n    const newOperator = {\n      username: operatorFormValues.operatorUsername.trim(),\n      email: operatorFormValues.operatorEmail.trim(),\n      password: operatorFormValues.operatorPassword.trim(),\n      role: \"operator\",\n    };\n\n    setUsers([...users, newOperator]);\n    setOperatorFormValues(initialOperatorFormValues);\n    postNewOperator(newOperator);\n  };\n\n  const postNewOperator = (newOperator) => {\n    axios\n      .post(\n        \"https://food-truck-back-end-lambda.herokuapp.com/api/auth/register\",\n        newOperator\n      )\n      .then((res) => {\n        console.log(res);\n        history.push(\"/login-form\");\n        //setDinerFormValues(initialDinerFormValues);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route path=\"/register-form\">\n          <RegisterForm\n            dinerChange={dinerInputChange}\n            dinerDisabled={dinerButton}\n            dinerFormSubmit={dinerFormSubmit}\n            dinerValues={dinerFormValues}\n            operatorChange={operatorInputChange}\n            operatorDisabled={operatorButton}\n            operatorFormSubmit={operatorFormSubmit}\n            operatorValues={operatorFormValues}\n            dinerErrors={dinerFormErrors}\n            operatorErrors={operatorFormErrors}\n          />\n        </Route>\n\n      <UserContext.Provider value={{currentUser, setCurrentUser, menus, setMenus, trucks, setTrucks, currentTruck, setCurrentTruck}}>\n        <Route  path=\"/login-form\">\n          <StyledLoginFormContainer>\n            <LoginForm />\n          </StyledLoginFormContainer>\n        </Route>\n        \n        <SecureOpRoute path=\"/menu-items/:id\" component={Menu} />\n        <SecureDinerRoute path=\"/diner-dashboard\" component={DinerDash}/>\n        <SecureOpRoute path=\"/operator-dashboard\">\n          <OperatorDash />\n        </SecureOpRoute>\n        <Route exact path=\"/\">\n\n          <StyledBigImage>\n            <LoginForm />\n          </StyledBigImage>\n        </Route>\n     </UserContext.Provider>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\nconst StyledBigImage = styled.div`\n  // border: solid 1px red;\n  border-top: solid 2px #ffcc4d;\n  border-bottom: solid 2px #ffcc4d;\n  background: url(\"https://www.history.com/.image/ar_1:1%2Cc_fill%2Ccs_srgb%2Cfl_progressive%2Cq_auto:good%2Cw_1200/MTU3ODc4NjAyNzI5MjY4NTUz/hungry-food-trucks-istock_000021186450large-2.jpg\");\n  height: 50vh;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: -2%;\n`;\n\nconst StyledLoginFormContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 3%;\n`;","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/RegisterForm.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/NavBar.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/OperatorDash.js",["116","117","118"],"import React, { useEffect, useState } from \"react\";\nimport Trucks from \"./Trucks\";\nimport SearchBar from \"./SearchBar\";\nimport OperatorProfile from \"./OperatorProfile\";\nimport { TrucksContext } from \"../contexts/TrucksContext\";\nimport axios from \"axios\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport styled from \"styled-components\";\n\nexport default function OperatorDash() {\n  const [trucks, setTrucks] = useState([]);\n  const [menus, setMenus] =useState([])\n  const [avgRatings, setAvgRatings] = useState([])\n\n  const fetchTrucks = () => {\n    axiosWithAuth()\n      .get(\"/api/trucks\")\n      .then((res) => {\n        console.log(res.data);\n        setTrucks(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const fetchMenus = () => {\n      axiosWithAuth()\n      .get(\"/api/menus\")\n      .then(res => {\n          console.log(res.data)\n      })\n      .catch(err=>{\n          console.log(err.response.data.message)\n      })\n  }\n\n  useEffect(() => {\n    fetchTrucks();\n    console.log(trucks);\n  }, []);\n  // get trucks from api .then(setTrucks(res.data)).catch(setTrucks(\"Could not load trucks\"))\n\n  return (\n    <TrucksContext.Provider value={{ trucks, setTrucks, menus, setMenus, avgRatings, setAvgRatings }}>\n      <SearchBar />\n\n      <StyledDashboardContainer>\n        <StyledOperatorProfileContainer>\n          <OperatorProfile />\n        </StyledOperatorProfileContainer>\n\n        <StyledTrucksContainer>\n          <Trucks />\n        </StyledTrucksContainer>\n      </StyledDashboardContainer>\n    </TrucksContext.Provider>\n  );\n}\n\nconst StyledDashboardContainer = styled.div`\n  //border: solid 1px red;\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledOperatorProfileContainer = styled.div`\n  // border: solid 1px blue;\n  border-right: solid 1px lightgray;\n  padding: 5%;\n  width: 30%;\n`;\n\nconst StyledTrucksContainer = styled.div`\n  // border: solid 1px green;\n  border-left: solid 1px lightgray;\n  padding: 5%;\n  width: 60%;\n`;","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/LoginForm.js",["119","120"],"// username and password need to be present\n\n// looking for username and password on the back end\n// access key?\n// send to back end via POST (onSubmit())\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {UserContext} from \"../contexts/UserContext\"\nimport styled from \"styled-components\";\nimport loginSchema from \"../validation/loginFormSchema\";\nimport * as yup from \"yup\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst initialLoginFormValues = {\n  username: \"\",\n  password: \"\",\n};\n\nconst initialLoginFormErrors = {\n  username: \"\",\n  password: \"\",\n};\nconst initialLoginDisabled = true;\n\nexport default function LoginForm() {\n  const {currentUser, setCurrentUser} = useContext(UserContext) //allows me to access state from App.js via Context.Provider\n  const {push} = useHistory()\n\n  const [loginFormValues, setLoginFormValues] = useState(\n    initialLoginFormValues\n  );\n  const [loginButton, setLoginButton] = useState(initialLoginDisabled);\n  const [loginFormErrors, setLoginFormErrors] = useState(\n    initialLoginFormErrors\n  );\n  const [authError, setAuthError] = useState(\"\")\n\n  const loginInputChange = (name, value) => {\n    yup\n      .reach(loginSchema, name)\n      .validate(value)\n      .then(() => {\n        setLoginFormErrors({\n          ...loginFormErrors,\n          [name]: \"\",\n        });\n      })\n      .catch((err) => {\n        setLoginFormErrors({\n          ...loginFormErrors,\n          [name]: err.errors[0],\n        });\n      });\n\n    setLoginFormValues({\n      ...loginFormValues,\n      [name]: value,\n    });\n  };\n\n  useEffect(() => {\n    loginSchema.isValid(loginFormValues).then((valid) => {\n      setLoginButton(!valid);\n    });\n  }, [loginFormValues]);\n\n  /*\ncode that was pulled in from the main App.js component is up above    \n    \n    \n    \n    \n    \n    \ncode that was already in the Login.js component is placed below and everything is hooked up to work as before will be hooking the form to the backend using the POST upon form submit\n    */\n  const loginOnChange = (evt) => {\n    const { name, value } = evt.target;\n    loginInputChange(name, value);\n  };\n\n  const loginSubmit = (evt) => {\n    evt.preventDefault();\n    //axios needed\n    axios\n      .post(\n        \"https://food-truck-back-end-lambda.herokuapp.com/api/auth/login\",\n        loginFormValues\n      )\n      .then((res) => {\n        console.log(res.data);\n        localStorage.setItem('token', res.data.token);\n        localStorage.setItem('role', res.data.role); // possibly redundant\n        setCurrentUser(res.data.userData) // from Context\n        res.data.role ===\"diner\" ?\n        push(\"/diner-dashboard\")  :\n        push(\"/operator-dashboard\")\n      })\n      .catch((err) => {\n        debugger\n        setAuthError(err.response.data.message);\n      });\n    //\n    // console.log(\"success!\");\n    // this will be axios POST instead of console.log. Thats there just for testing and the form does work properly (just doesn't send any actual data)\n  };\n\n  return (\n    <StyledLoginContainer>\n      <h2>Login Here!</h2>\n      <form onSubmit={loginSubmit}>\n        <StyledInputDiv>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={loginFormValues.username}\n              onChange={loginOnChange}\n              placeholder='Username'\n            ></input>\n\n            <StyledLoginErrors>\n              {loginFormErrors.username}\n            </StyledLoginErrors>\n        </StyledInputDiv>\n\n        <StyledInputDiv>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={loginFormValues.password}\n              onChange={loginOnChange}\n              placeholder='Password'\n            ></input>\n\n            <StyledLoginErrors>\n              {loginFormErrors.password}\n            </StyledLoginErrors>\n\n        </StyledInputDiv>\n        <StyledLoginButton disabled={loginButton}>Login!</StyledLoginButton>\n        <p> {authError} </p>\n      </form>\n      <p>\n        Need an Account?\n        <br />\n        <Link to=\"/register-form\">Register Here</Link>\n      </p>\n    </StyledLoginContainer>\n  );\n}\n\nconst StyledLoginContainer = styled.div`\n  // border: solid 1px red;\n  background-color: white;\n  padding: 2%;\n  border-radius: 15px;\n  box-shadow: 0px 0px 12px black;\n  width: 35%;\n\n  input {\n    margin: 0 0 3% 1%;\n    padding: 1%;\n  }\n`;\n\nconst StyledLoginButton = styled.button`\n  background-color: #FFCC4D;\n    font-weight: bold;\n    border: none;\n    padding: 3% 7% 3% 7%;\n    border-radius: 5px;\n    color: #585858;\n    margin-top: 2%;\n    transition: .3s;\n    cursor: pointer;\n  }\n\n  :hover {\n    background-color:#77B255;\n    color: white;\n  }\n\n  ${props => (props.disabled === true ? `background-color: #b7b7b7; color: black; cursor: default; :hover{background-color: #b7b7b7; color: black};` : null)}\n`;\n\nconst StyledInputDiv = styled.div`\n  // border: solid 1px blue;\n`;\n\nconst StyledLoginErrors = styled.div`\n  color: red;\n`;\n","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/Footer.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/SecureOpRoute.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/validation/dinerFormSchema.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/SecureDinerRoute.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/DinerDash.js",["121","122","123","124"],"import React, {useState, useEffect, useContext} from \"react\"\nimport Trucks from \"./Trucks\"\nimport DinerProfile from \"./DinerProfile\"\nimport SearchBar from \"./SearchBar\"\nimport {TrucksContext} from '../contexts/TrucksContext'\nimport {UserContext} from '../contexts/UserContext'\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\"\nimport styled from 'styled-components';\n\n// const currentUserData = {\n//     id: 1,\n//     role: \"operator\",\n//     username: \"anthony\",\n//     password: \"password\",\n//     currentLocation: \"02134\",   // can be string with address, zipcode number, GPS coordinates as string\n//     trucksOwned: [\n//                 {id: 123, // unique truck id\n//                 imageOfTruck: \"https://images.unsplash.com/photo-1565097158282-1094bd0fe46a?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTB8fGZvb2QlMjB0cnVja3N8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n//                 cuisineType: \"popcorn\",\n//                 customerRatings: [4, 3, 2, 1]}\n//     ]}\n\nexport default function DinerDash() {\n    const [trucks, setTrucks] = useState([])\n    const {menus, setMenus} =useContext(UserContext)\n    const [searchCriteria, setSearchCriteria] = useState()\n    const [avgRatings, setAvgRatings] = useState([])\n\n\n    const fetchTrucks = () => {\n        \n        axiosWithAuth()\n            .get('/api/trucks')\n            .then(res => {\n                console.log(\"dinerdash setting trucks\",res.data)\n                setTrucks(res.data)\n            }\n            )\n            .catch(err => {\n                console.log(err)\n                setTrucks('Could not load trucks')\n            })\n        }  \n\n        const fetchMenus = () => {\n            axiosWithAuth()\n            .get(\"/api/menus\")\n            .then(res => {\n                console.log(\"MENUS****\",res.data)\n                setMenus(res.data)\n            })\n            .catch(err=>{\n                console.log(err.response.data.message)\n            })\n        }\n\n    useEffect(() => {\n        fetchMenus()\n        fetchTrucks()\n        console.log(trucks)\n    }, [])\n\n    return(\n        <TrucksContext.Provider value={{trucks, setTrucks, searchCriteria, setSearchCriteria}}>\n            <SearchBar /> \n\n            <StyledDashboardContainer>  \n                <StyledDinerProfileContainer>\n                    <DinerProfile/>\n                </StyledDinerProfileContainer>\n\n                <StyledTrucksContainer>\n                    <Trucks />\n                </StyledTrucksContainer>\n\n            </StyledDashboardContainer>\n\n       </TrucksContext.Provider>\n    )\n}\n\nconst StyledDashboardContainer = styled.div`\n  //border: solid 1px red;\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledDinerProfileContainer = styled.div`\n  // border: solid 1px blue;\n  border-right: solid 1px lightgray;\n  padding: 5%;\n  width: 30%;\n`;\n\nconst StyledTrucksContainer = styled.div`\n  // border: solid 1px green;\n  border-left: solid 1px lightgray;\n  padding: 5%;\n  width: 60%;\n`;","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/validation/operatorFormSchema.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/menu/Menu.js",["125","126","127"],"import React, { useState, useContext, useEffect } from \"react\";\n// import {UserContext} from '.../contexts/UserContext'\nimport {useParams} from 'react-router-dom'\nimport MenuItem from \"./MenuItem\";\nimport { TrucksContext } from \"../../contexts/TrucksContext\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { axiosWithAuth } from \"../../utils/axiosWithAuth\";\nimport styled from 'styled-components';\n\nconst menuInitialValues = {\n  itemName: \"\",\n  itemDescription: \"\",\n  itemPhoto: '',\n  itemPrice: null,\n};\n\n // customerRatings: [],\n  // customerRatingAvg: function Average() {\n  //   let avg = this.customerRatings.reduce((acc, index) => {\n  //     return acc + index;\n  //   }, 0);\n\n  //   const average = avg / this.customerRatings.length;\n  //   return average.toFixed(2);\n  // },\n\n\n// const menus = [\n//   {\n//     id: 0,\n//     itemName: \"Burger\",\n//     itemDescription: \" fire food for the tummy\",\n//     itemPhoto: [\n//       \"https://www.sbs.com.au/food/sites/sbs.com.au.food/files/lotus-burger-lead.jpg\",\n//     ],\n//     itemPrice: 15.99,\n//     customerRatings: [4, 2, 2, 5],\n//     customerRatingAvg: function Average() {\n//       let avg = this.customerRatings.reduce((acc, index) => {\n//         return acc + index;\n//       }, 0);\n\n//       const average = avg / this.customerRatings.length;\n//       return average.toFixed(2);\n//     },\n//   },\n//   {\n//     id: 1,\n//     itemName: \"Fish Fillet\",\n//     itemDescription: \" fire food for the tummy\",\n//     itemPhoto: [\n//       \"https://d1e3z2jco40k3v.cloudfront.net/-/media/mccormick-us/recipes/mccormick/s/800/saucy-lemon-fish-filets.jpg\",\n//     ],\n//     itemPrice: 5.99,\n//     customerRatings: [1, 2, 5],\n//     customerRatingAvg: function () {\n//       const avg = this.customerRatings.reduce(function (acc, index) {\n//         return acc + index;\n//       }, 0);\n//       const average = avg / this.customerRatings.length;\n//       return average.toFixed(2);\n//     },\n//   },\n//   {\n//     id: 2,\n//     itemName: \"Sirlion Steak\",\n//     itemDescription: \" fire food for the tummy\",\n//     itemPhoto: [\n//       \"https://www.lecremedelacrumb.com/wp-content/uploads/2020/07/sirloin-steak-7sm-10-500x500.jpg\",\n//     ],\n//     itemPrice: 55.99,\n//     customerRatings: [4, 3, 4, 1],\n//     customerRatingAvg: function () {\n//       const avg = this.customerRatings.reduce(function (acc, index) {\n//         return acc + index;\n//       }, 0);\n//       const average = avg / this.customerRatings.length;\n//       return average.toFixed(2);\n//     },\n//   },\n//   {\n//     id: 3,\n//     itemName: \"Burger\",\n//     itemDescription: \" fire food for the tummy\",\n//     itemPhoto: [\n//       \"https://www.foodrepublic.com/wp-content/uploads/2012/03/033_FR11785.jpg\",\n//     ],\n//     itemPrice: 15.99,\n//     customerRatings: [4, 2, 2, 5],\n//     customerRatingAvg: function Average() {\n//       let avg = this.customerRatings.reduce((acc, index) => {\n//         return acc + index;\n//       }, 0);\n\n//       const average = avg / this.customerRatings.length;\n//       return average.toFixed(2);\n//     },\n//   },\n//   {\n//     id: 4,\n//     itemName: \"Fish Fillet\",\n//     itemDescription: \" fire food for the tummy\",\n//     itemPhoto: [\n//       \"https://skinnyms.com/wp-content/uploads/2015/09/Savory-Lemon-White-Fish-Fillets.jpg\",\n//     ],\n//     itemPrice: 5.99,\n//     customerRatings: [1, 2, 5],\n//     customerRatingAvg: function () {\n//       const avg = this.customerRatings.reduce(function (acc, index) {\n//         return acc + index;\n//       }, 0);\n//       const average = avg / this.customerRatings.length;\n//       return average.toFixed(2);\n//     },\n//   },\n//   {\n//     id: 5,\n//     itemName: \"Sirlion Steak\",\n//     itemDescription: \" fire food for the tummy\",\n//     itemPhoto: [\n//       \"https://images-na.ssl-images-amazon.com/images/I/51SeQyjS3NL.jpg\",\n//     ],\n//     itemPrice: 55.99,\n//     customerRatings: [4, 3, 4, 1],\n//     customerRatingAvg: function Average() {\n//       const avg = this.customerRatings.reduce(function (acc, index) {\n//         return acc + index;\n//       }, 0);\n//       const average = avg / this.customerRatings.length;\n//       return average.toFixed(2);\n//     },\n//   },\n// ];\n\nfunction Menu() {\n  // const [menuItem, setMenuItem] = useState(menuInitialValues);\n  const {id} = useParams()\n  const { trucks } = useContext(TrucksContext) // should access via Context, but for time's sake, going to access via API call\n  const [formValues, setFormValues] = useState(menuInitialValues)\n  // const [trucks, setTrucks] = useState([])\n  const {menus, setMenus, currentUser, currentTruck, setCurrentTruck} = useContext(UserContext)\n  const [isAdding, setIsAdding] = useState(false)\n  \n  console.log(currentUser)\n  console.log(currentTruck)\n\n  // useEffect(() => {\n\n  //   axiosWithAuth()\n  //   .get('/api/trucks')\n  //   .then(res => {\n  //     setTrucks(res.data)\n  //   })\n  //   .catch(err => {\n  //     console.log(err)\n  //   })\n    // setCurrentTruck(fetchCurrentTruck[0])\n  // }, [])\n  \n  console.log(trucks, \"from menu\")\n  //console.log(currentTruck, 'currentTruck')\n\n  // let fetchCurrentTruck = \n\n  // console.log(fetchCurrentTruck[0])\n \n\n\n  const toggleDisplayAddForm = () => {\n    setIsAdding(!isAdding)\n}\n\nconst postNewMenu = () => {\n\n  setFormValues({...formValues, itemPrice: Number(formValues.itemPrice) })\n  console.log(formValues)\n  axiosWithAuth()\n  .post(`/api/menus/${id}`, formValues)\n  .then(res => {\n    console.log(res.data)\n    axiosWithAuth()\n    .get(`/api/menus`)\n    .then(res=> {\n      console.log(res.data)\n      setMenus(res.data)\n    })\n    .catch(err=> {\n      console.log(err)\n    })\n  })\n  .catch(err => {\n    console.log(err.response.data.message)\n    console.log(formValues)\n  })\n}\n\nconst handleAddMenuItem = (evt) => {\n  evt.preventDefault();\n  setIsAdding(false);\n  postNewMenu();\n}\n\nconst handleChangeAdd = (evt) => {\n  evt.preventDefault()\n  const {name, value} = evt.target\n  console.log(name)\n  setFormValues({...formValues, [name]: value})\n}\n\nconst thisTrucksMenu = menus.filter(menu => {\n  \n  return menu.truck_id == id\n  })\n\n\n  console.log(thisTrucksMenu, \"thistrucks menu\")\n  return (\n    <div className=\"menu-list\">\n      <h4>Menu List</h4>\n      <div>\n        <ol>\n        {thisTrucksMenu.length !== 0 ? thisTrucksMenu.map((menu) => {\n            // console.log(menu);\n            return (\n              <li\n                style={{\n                  textDecoration: \"none\",\n                  width: \"20%\",\n                  margin: \"0 auto\",\n                }}\n              >\n                <MenuItem key={menu.id} menu={menu} />\n              </li>\n            );\n          }) :\n          <span>No Menu Here... yet</span>}\n          {/* <span>{currentUser.user_id}</span> */}\n        </ol>\n      </div>\n      {!isAdding && currentTruck.user_id === Number(currentUser.user_id) ? <StyledAddNewMenu onClick={toggleDisplayAddForm}>+ Add New Menu Item</StyledAddNewMenu> :\n      <></>}\n\n{isAdding && currentTruck.user_id === Number(currentUser.user_id) ?\n            <form onSubmit={handleAddMenuItem}>\n            <StyledAddNewMenu onClick={toggleDisplayAddForm}>Hide Form</StyledAddNewMenu>\n\n            <StyledAddMenuItemInput>\n            <label>Menu Item Name <br />\n            <input onChange={handleChangeAdd} name=\"itemName\" value={formValues.itemName} type=\"text\" placeholder=\"Chicken Parm\"/>\n            </label>\n            </StyledAddMenuItemInput>\n\n            <StyledAddMenuItemInput>\n            <label>Menu Item Image URL <br />\n            <input onChange={handleChangeAdd} name=\"itemPhoto\" value={formValues.itemPhoto} type=\"text\" placeholder=\"foodphoto.com\"/>\n            </label>\n            </StyledAddMenuItemInput>\n\n            <StyledAddMenuItemInput>\n            <label>Item Price <br />\n            <input onChange={handleChangeAdd} name=\"itemPrice\" value={formValues.itemPrice} type=\"number\" placeholder=\"9\"/><br/>\n            </label>\n            </StyledAddMenuItemInput>\n\n            <StyledAddMenuItemInput>\n            <label>Description\n            <input onChange={handleChangeAdd} name=\"itemDescription\" value={formValues.itemDescription} type=\"text\" placeholder=\"Gooey, cheesy breaded chicken with red sauce\"/>\n            </label>\n            </StyledAddMenuItemInput>\n\n            <StyledAddMenuItemButton type='submit'>Add Menu Item</StyledAddMenuItemButton>\n        </form> :\n        <></>\n    }\n\n    </div>\n  );\n}\n\nconst StyledAddNewMenu = styled.button`\n    color: white;\n    background-color: #C1694F;\n    border: none;\n    padding: 3% 7% 3% 7%;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-bottom: 5%;\n`;\n\nconst StyledAddMenuItemInput = styled.div`\n    // border: solid 1px black;\n    margin-bottom: 5%;\n\n    input {\n        padding: 1.5%;\n        font-size: .9em;\n    }\n\n    label {\n        font-weight: bold;\n    }\n`;\n\nconst StyledAddMenuItemButton = styled.button`\n    color: white;\n    background-color: #DA3647;\n    border: none;\n    padding: 3% 7% 3% 7%;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-bottom: 5%;\n`;\n\nexport default Menu;\n","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/contexts/UserContext.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/contexts/TrucksContext.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/Trucks.js",["128","129","130","131","132","133"],"import React, { useEffect, useState, useContext } from 'react'\nimport {TrucksContext} from '../contexts/TrucksContext'\nimport { UserContext } from '../contexts/UserContext'\nimport users from '../dummy-data/users'\nimport { axiosWithAuth } from '../utils/axiosWithAuth'\nimport TruckCard from './TruckCard'\n\nexport default function Trucks(props) {\n    // const [isDiner, setIsDiner] = useState(false)\n    // const [favorites, setFavorites] = useState([])\n    const {trucks} = useContext(TrucksContext)\n    const {currentUser, setCurrentUser} = useContext(UserContext)\n    // useEffect( () => {\n    //     setIsDiner(currentUser.role === \"diner\")\n    //     setFavorites(currentUser.favoriteTrucks)\n    // }, [])\n\n  console.log(trucks)\n\n    return (\n        <div className=\"trucks-container\">\n        {!trucks ? <div>Loading...</div>:\n            trucks.map( truck => {\n                return (\n                    <TruckCard key={truck.truck_id} truck={truck} />\n                )\n            })}\n\n        </div>\n        \n    )\n}","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/SearchBar.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/OperatorProfile.js",["134","135","136","137","138","139"],"import axios from \"axios\"\nimport React, {useContext, useEffect, useState } from \"react\"\nimport { TrucksContext } from \"../contexts/TrucksContext\"\nimport {UserContext} from \"../contexts/UserContext\"\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\"\nimport styled from 'styled-components';\n\nconst initialFormValues = \n\n                        {cuisineType: \"\",\n                        departureTimeString: \"\", //may change\n                        imageOfTruck: \"\",\n                        latitude: \"\",\n                        longitude: \"\",\n                        }\n\nexport default function OperatorProfile() {\n    const {currentUser, setCurrentUser} = useContext(UserContext)\n    const {trucks, setTrucks} = useContext(TrucksContext)\n    const [isAdding, setIsAdding] = useState(false)\n    const [isEditing, setIsEditing] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n    const [editingTruckId, setEditingTruckId] = useState(null)\n    const [formValues, setFormValues] = useState(initialFormValues)\n    const [editFormValues, setEditFormValues] = useState({})\n    const [infoDisplay, setInfoDisplay] = useState(false)\n    const [profileUserTrucks, setProfileUserTrucks] = useState([])\n    console.log(currentUser)\n    console.log(trucks)\n\n  \n\n    const postNewTruck = (evt) => {\n        let newTruck = {...formValues, user_id: Number(currentUser.user_id)}\n        newTruck = {...newTruck,\n             latitude: Number(formValues.latitude), \n             longitude: Number(formValues.longitude),\n             departureTimeString: formValues.departureTimeString.toString() } //may change \n             //\n        axiosWithAuth()\n        .post(\"api/trucks\", newTruck)\n        .then( res => {\n            axiosWithAuth()\n            .get(\"/api/trucks\")\n            .then( res => {\n                setTrucks(res.data)\n            }\n            )\n            .catch(err => {\n                console.log(err.response.data.message)\n            })\n        }\n        )\n        .catch(err => {\n            console.log(err.response.data.message)\n            console.log(newTruck)\n        })\n    }\n\n    const handleAddTruck = (evt) => {\n        evt.preventDefault();\n        setIsAdding(false);\n        postNewTruck();\n    }\n\n    const toggleDisplayAddForm = () => {\n        setIsAdding(!isAdding)\n    }\n    const toggleInfoDisplay = () => {\n        setInfoDisplay(!infoDisplay)\n    }\n\n    const handleChangeAdd = (evt) => {\n        evt.preventDefault()\n        const {name, value} = evt.target\n        console.log(name)\n        setFormValues({...formValues, [name]: value})\n    }\n\n    const handleChangeEdit = (evt) => {\n        evt.preventDefault()\n        const {name, value} = evt.target\n      setEditFormValues({...editFormValues, [name]: value})\n    }\n    \n    const handleEdit = (e, trk) => {\n        e.preventDefault()\n        setEditFormValues(trk)\n        setIsEditing(!isEditing)\n        setEditingTruckId(trk.truck_id)\n    }\n\n    const handleSubmitEdit = (e) => {\n        e.preventDefault();\n        console.log(editingTruckId)\n        const putParam = {...editFormValues, user_id:Number(currentUser.user_id)} // truck_id:editingTruckId,\n        axiosWithAuth()\n        .put(`/api/trucks/${editingTruckId}`, putParam )\n        .then(res => {\n            axiosWithAuth()\n            .get(\"/api/trucks\")\n            .then( res => {\n                setTrucks(res.data)\n            }\n            )\n            .catch(err => {\n                console.log(err.response.data.message)\n            })\n        })\n        .catch(err => {\n            console.log(err.response.data.message)\n            console.log(putParam)\n        })\n    }\n\n    const handleDelete = (e, trk) => {\n        // let changedTrucksArray = profileUserTrucks\n        // changedTrucksArray[index] = {...profileUserTrucks[index], isDeleting: true}\n        // setProfileUserTrucks(changedTrucksArray)\n        axiosWithAuth()\n        .delete(`/api/trucks/${trk.truck_id}`)\n        .then(res => {\n            axiosWithAuth()\n            .get(\"/api/trucks\")\n            .then( res => {\n                setTrucks(res.data)\n            }\n            )\n            .catch(err => {\n                console.log(err.response.data.message)\n            })\n        })\n        .catch(err => {\n            console.log(err.response.data.message)\n        })\n    }\n\n        let currentUserTrucks = trucks.filter( (truck) => {\n            return truck.user_id === Number(currentUser.user_id) \n        })\n\n    //    setProfileUserTrucks( currentUserTrucks.map(truck => {\n    //         return {...truck, isDeleting: false}\n    //     })\n    //    )\n   console.log(profileUserTrucks)\n\n    return(\n        <div className=\"profile-container\">\n            {!currentUser ? <div>Loading user info...</div> :\n            <div>\n                <h1>Hi, <StyledUsername>{currentUser.username}</StyledUsername>!</h1>\n                <h2> Account Type: <StyledRole>{currentUser.role}</StyledRole></h2>\n                \n                    Trucks Owned: <br/><br/>\n           { isEditing && <form onSubmit={handleSubmitEdit}>\n                    <StyledAddTruckInput>\n                    <label>Truck Name <br />\n                    <input onChange={handleChangeEdit} name=\"truckName\" value={editFormValues.truckName} type=\"text\" placeholder=\"Meals On Wheels\"/>\n                    </label>\n                    </StyledAddTruckInput>\n\n                    <StyledAddTruckInput>\n                    <label>Truck Image URL <br />\n                    <input onChange={handleChangeEdit} name=\"imageOfTruck\" value={editFormValues.imageOfTruck} type=\"text\" placeholder=\"truckphoto.com\"/>\n                    </label>\n                    </StyledAddTruckInput>\n\n                    <StyledAddTruckInput>\n                    <label>Cuisine <br />\n                    <input onChange={handleChangeEdit} name=\"cuisineType\" value={editFormValues.cuisineType} type=\"text\" placeholder=\"Italian\"/>\n                    </label>\n                    </StyledAddTruckInput>\n\n                    <StyledAddTruckInput>\n                    <label>Current Location (Lat., Long.) <br />\n                    <input onChange={handleChangeEdit} name=\"latitude\" value={editFormValues.latitude} type=\"text\" placeholder=\"37.818059\"/><br/>\n                    <input onChange={handleChangeEdit} name=\"longitude\" value={editFormValues.longitude} type=\"text\" placeholder=\"-122.477700\"/>\n                    </label>\n                    </StyledAddTruckInput>\n\n                    <StyledAddTruckInput>\n                    <label>Departure Time <span onClick={toggleInfoDisplay}>ℹ️</span> <br />\n                    {infoDisplay && <p>(when does the truck leave its current location?)</p>}\n                    <input onChange={handleChangeEdit} name=\"departureTimeString\" value={editFormValues.departureTimeString} type=\"datetime-local\" placeholder=\"\"/>\n                    </label>\n                    </StyledAddTruckInput>\n\n                    <StyledAddTruckButton type='submit'>Submit Update</StyledAddTruckButton>\n                    </form>\n                    }\n                    { currentUserTrucks.length === 0 ? <span> None yet, click below to add</span> :\n                    currentUserTrucks.map((truck) => {\n                        return(\n                            <StyledOperatorTruck >\n                                {/* {profileUserTrucks[i].isDeleting && <span>Are you sure you want to delete?</span>} */}\n                            <h3>{truck.truckName}</h3>\n                            <StyledEditSpan onClick={(e) => handleEdit(e, truck)}>edit</StyledEditSpan>\n                            <StyledDeleteSpan onClick={(e) => handleDelete(e, truck)}>delete</StyledDeleteSpan>\n                            </StyledOperatorTruck>\n                        )\n                    })}\n                  \n        \n        {!isAdding && <StyledAddNewTruck onClick={toggleDisplayAddForm}>+ Add new truck</StyledAddNewTruck>}\n\n        {isAdding && <form onSubmit={handleAddTruck}>\n                    <StyledAddNewTruck onClick={toggleDisplayAddForm}>Hide Form</StyledAddNewTruck>\n\n                    <StyledAddTruckInput>\n                    <label>Truck Name <br />\n                    <input onChange={handleChangeAdd} name=\"truckName\" value={formValues.truckName} type=\"text\" placeholder=\"Meals On Wheels\"/>\n                    </label>\n                    </StyledAddTruckInput>\n\n                    <StyledAddTruckInput>\n                    <label>Truck Image URL <br />\n                    <input onChange={handleChangeAdd} name=\"imageOfTruck\" value={formValues.imageOfTruck} type=\"text\" placeholder=\"truckphoto.com\"/>\n                    </label>\n                    </StyledAddTruckInput>\n\n                    <StyledAddTruckInput>\n                    <label>Cuisine <br />\n                    <input onChange={handleChangeAdd} name=\"cuisineType\" value={formValues.cuisineType} type=\"text\" placeholder=\"Italian\"/>\n                    </label>\n                    </StyledAddTruckInput>\n\n                    <StyledAddTruckInput>\n                    <label>Current Location (Lat., Long.) <br />\n                    <input onChange={handleChangeAdd} name=\"latitude\" value={formValues.latitude} type=\"text\" placeholder=\"37.818059\"/><br/>\n                    <input onChange={handleChangeAdd} name=\"longitude\" value={formValues.longitude} type=\"text\" placeholder=\"-122.477700\"/>\n                    </label>\n                    </StyledAddTruckInput>\n\n                    <StyledAddTruckInput>\n                    <label>Departure Time <span onClick={toggleInfoDisplay}>ℹ️</span> <br />\n                    {infoDisplay && <p>(when does the truck leave its current location?)</p>}\n                    <input onChange={handleChangeAdd} name=\"departureTimeString\" value={formValues.departureTimeString} type=\"datetime-local\" placeholder=\"\"/>\n                    </label>\n                    </StyledAddTruckInput>\n\n                    <StyledAddTruckButton type='submit'>Add New Truck</StyledAddTruckButton>\n                </form>\n            }\n             \n            </div>}\n        </ div>\n    )\n}\n\n// users[3].trucksOwned[1].menu[5].customerRatingAvg\n\nconst StyledUsername = styled.span`\n    color: #FFCC4D;\n`;\n\nconst StyledRole = styled.span`\n    color: #7DB65B;\n`;\n\nconst StyledAddNewTruck = styled.button`\n    color: white;\n    background-color: #C1694F;\n    border: none;\n    padding: 3% 7% 3% 7%;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-bottom: 5%;\n`;\n\nconst StyledAddTruckInput = styled.div`\n    // border: solid 1px black;\n    margin-bottom: 5%;\n\n    input {\n        padding: 1.5%;\n        font-size: .9em;\n    }\n\n    label {\n        font-weight: bold;\n    }\n`;\n\nconst StyledAddTruckButton = styled.button`\n    color: white;\n    background-color: #DA3647;\n    border: none;\n    padding: 3% 7% 3% 7%;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-bottom: 5%;\n`;\nconst StyledOperatorTruck = styled.div`\nborder: solid black 2px;\npadding: 2%;\nmargin: 2%;\nborder-radius: 5px;\n\n\n`\n\nconst StyledEditSpan = styled.span`\n    border: solid #7DB65B 2px; \n    margin: 2%;\n    color: #7DB65B;\n    border-radius: 5px;\n    `\nconst StyledDeleteSpan = styled.span`\n    border: solid #DA3647 2px;\n    margin: 2%;\n    margin-bottom: 4%;\n    color: #DA3647;\n    border-radius: 5px;\n    `","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/validation/loginFormSchema.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/DinerProfile.js",["140"],"import React, {useContext, useState} from \"react\"\nimport {UserContext} from '../contexts/UserContext'\nimport {TrucksContext} from '../contexts/TrucksContext'\nimport styled from 'styled-components';\nimport axios from \"axios\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nexport default function DinerProfile() {\n    const {currentUser} = useContext(UserContext)\n    const {trucks} = useContext(TrucksContext)\n    const [formValues, setFormValues] = useState({latitude:'',longitude:''}) \n    console.log(currentUser)\n    console.log(trucks)\n\n    const putLocation = (lat,lng) => {\n        const putParam = {\n            latitude:Number(lat),\n            longitude:Number(lng),\n            username: currentUser.username\n        }\n        axiosWithAuth()\n        .put(\"/api/auth/diner-location\", putParam)\n        .then(res => {\n            console.log(res.data)\n            // setCurrentUser(...currentUser,\n            //     [latitude]: )\n        })\n        .catch(err => {\n            console.log(err)\n            console.log(putParam)\n        })\n\n    } \n\n    const handleUpdateLocation = (evt) => {\n        evt.preventDefault();\n        putLocation(formValues.latitude, formValues.longitude)\n    }\n    const handleChange = (evt) => {\n        setFormValues({...formValues,\n            [evt.target.name]: evt.target.value\n        })\n    }\n\n    return(\n        <div className=\"profile-container\">\n        {!currentUser ? <div>Loading user info...</div> :\n            <div>\n                <h1>Hi, <StyledUsername>{currentUser.username}</StyledUsername>!</h1>\n                <h2> Account Type: <StyledRole>{currentUser.role}</StyledRole></h2>\n                <h3>Current Location: {currentUser.latitude !== \"null\" ? currentUser.latitude : \"Not Provided\"} {currentUser.longitude !== \"null\" ? currentUser.longitude : ''}</h3>\n                <form onSubmit={handleUpdateLocation}>\n                <div>\n                <h3> Update Current Location: </h3>\n                <label>\n                Latitude Coordinates (ex. 37.7749):\n                    <input type=\"number\" name=\"latitude\" value={formValues.latitude} onChange={handleChange}/>\n                </label>\n                </div>\n                <div>\n                <label>\n                    Longitude Coordinates (ex. 122.4194)<br/>\n                    <input type=\"number\" name=\"longitude\" value={formValues.longitude} onChange={handleChange}/><br/>\n                </label>\n                </div>\n                <button type=\"submit\">Update Location</button>\n                </form>\n                <br/>\n                <div>Maybe list of favorite trucks goes here?</div>\n            </div>}\n        </ div>\n    )\n}\n\nconst StyledUsername = styled.span`\n    color: #FFCC4D;\n`;\n\nconst StyledRole = styled.span`\n    color: #7DB65B;\n`;","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/menu/MenuItem.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/utils/axiosWithAuth.js",[],"/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/components/TruckCard.js",["141","142","143","144","145","146","147"],"// TruckCard has the ability to expand if isExpanded === true\n\nimport React, { useContext, useEffect,  useState } from \"react\";\nimport {useHistory} from 'react-router-dom'\nimport { TrucksContext } from \"../contexts/TrucksContext\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport styled from 'styled-components';\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nexport default function TruckCard(props) {\n  // const {truck, isDiner, favorites, setFavorites, key} = props\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { truck } = props;\n  const { currentUser, currentTruck, setCurrentTruck } = useContext(UserContext);\n  // const isDiner = role === \"diner\";\n  const isDiner = true\n  const isFavorite = true;\n  const { push } = useHistory();\n\n  // const [isFavorite, setIsFavorite] = useState(false)\n\n  // const favoriteMatch = favorites.filter(favorite => {\n  //     return (\n  //     favorite === truck.id)\n  // })\n\n  // useEffect( () => {\n\n  // console.log(favoriteMatch.length)\n  //     setIsFavorite(favoriteMatch.length !== 0) // if favoriteMatch is an empty array, setIsFavorite to true - else, false\n  // }, [favorites])\n\n  const handleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n  // const handleAddToFavorites = () => {\n  //     setFavorites([...favorites,\n  //                 truck.id])\n  //                 // post request\n  // }\n\n  // const handleRemoveFromFavorites = () => {\n  //     setFavorites([...favorites,\n  //                 truck.id])\n\n  //                 // delete request\n\n  //   const handleRemoveFromFavorites = () => {\n  //     setFavorites([...favorites, truck.id]);\n\n  //     // delete request\n  //   };\n  axiosWithAuth()\n  .get(`/api/trucks/get-truck-rating-avg`)\n  .then(res=>{\n      console.log(res)\n  })\n  .catch(err=>{\n      console.log(err.response.data.message)\n  })\n\n  return (\n    <StyledTruckCardContainer>\n      <h1>{truck.truckName}{/*truck.truckName 'string'*/} </h1>\n      <img src={truck.imageOfTruck} /> {/*truck.imgURL 'string'*/}\n      <h3>Cuisine: {truck.cuisineType} </h3>\n      <h4>\n        Average Customer Rating: {}/5{\" \"}\n        {/*average of an array of ratings .reduce over customerRatings.value / customerRatings.length*/}{\" \"}\n      </h4>\n      <p>\n        Current Location of Truck: 123 Main St. San Francisco, CA{\" \"}\n        {/*truck.currentLocation*/}{\" \"}\n      </p>\n      <p>Departure Time: 6:00pm PST {/*truck.departureTime*/} </p>\n      <a onClick={() => {setCurrentTruck(truck); push(`/menu-items/${truck.truck_id}`)}}>\n        <StyledViewMenuItems>View Menu Items</StyledViewMenuItems>\n        {\" \"}\n        {/*.map over menuItems array ... expand this on same page? or new page?*/}{\" \"}\n      </a>\n      <br />\n      <br />\n      <span>If the role is diner...</span>\n      <a href=\"\">\n        Been here? Leave a Review!{\" \"}\n        {/*link to a page with a form that adds the review to the customer ratings array?*/}{\" \"}\n      </a>\n      \n      <p>\n        ❤️ one of your faves! -or- ♡ add to faves{\" \"}\n        {/* this will be generated based on code below */}{\" \"}\n      </p>\n      {\n        !isDiner ? (\n          <></>\n        ) : isFavorite ? (\n          <h5> ❤️ one of your faves </h5> //onClick ={handleRemoveFromFavorites}\n        ) : (\n          <h5> ♡ add to faves </h5>\n        ) //onClick={handleAddToFavorites}\n      }\n      {/* ^^ Only display click to add to favorites if user is role === \"diner\", state managed in Trucks.js */}\n      {!isExpanded && (\n        <h5 onClick={handleExpand}> Click here to see more details</h5>\n      )}\n      {/* ^^ Only display \"click to see more\" when the card is not expanded */}\n      {isExpanded && (\n        <div className=\"expanded-details-container\">\n          <img src={truck.imageOfTruck} alt=\"this food truck\" />\n          <h5 onClick={handleExpand}> Click here to hide </h5>\n        </div>\n      )}\n      {/* ^^ Only display the above when the card IS expanded */}\n      {/* ^^ Only display the above when the card IS expanded */}\n      </StyledTruckCardContainer>\n  );\n      }\n\n// create a component titled Menu which maps over all menu items and creates a subcomponent titled MenuItemCard for each item.\n// Menu is visible when truckcard isExpanded\n// MenuItemCard can also be expanded ~stretch~\n\nconst StyledTruckCardContainer = styled.div`\n  // border: solid 1px red;\n  margin-bottom: 4%;\n  box-shadow: 0px 0px 10px gray;\n  padding: 5%;\n\n  img {\n    width: 90%;\n  }\n`;\n\nconst StyledViewMenuItems = styled.button`\n  color: white;\n  background-color: #DA3647;\n  border: none;\n  padding: 2% 5% 2% 5%;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-bottom: 5%;\n`;\n","/Users/joshualovins/Documents/Lambda/unit4/sprint3/front-end/trackr/src/dummy-data/users.js",["148"],"const users = [{\n            id: 0,\n            role: \"diner\",\n            username: \"mikemurphy\",\n            password: \"password\",\n            currentLocation: \"60805\",   // can be string with address, zipcode number, GPS coordinates as string\n            favoriteTrucks: [0, 3, 5], // id\n        },\n        {\n            id: 1,\n            role: \"operator\",\n            username: \"anthony\",\n            password: \"password\",\n            currentLocation: \"02134\",   // can be string with address, zipcode number, GPS coordinates as string\n            trucksOwned: [\n                        {id: 123, // unique truck id\n                        imageOfTruck: \"https://images.unsplash.com/photo-1565097158282-1094bd0fe46a?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTB8fGZvb2QlMjB0cnVja3N8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n                        cuisineType: \"popcorn\",\n                        customerRatings: [4, 3, 2, 1]}\n            ]},   \n            {\n             id: 2,\n             role: \"diner\",\n             username: \"mikemurphy\",\n             password: \"password\",\n             currentLocation: \"60805\",   // can be string with address, zipcode number, GPS coordinates as string\n             favoriteTrucks: [123, 456, 789], // id\n                        },\n            {\n                id: 3,\n                role: \"operator\",\n                username: \"anthony\",\n                password: \"password\",\n                currentLocation: \"02134\",   // can be string with address, zipcode number, GPS coordinates as string\n                trucksOwned: [\n                    {\n                        id: 456,\n                        imageOfTruck: \"https://images.unsplash.com/photo-1565097158282-1094bd0fe46a?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTB8fGZvb2QlMjB0cnVja3N8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n                        cuisineType: \"popcorn\",\n                        customerRatings: [4, 5, 2, 2]\n                    },\n                    {\n                        id: 789,\n                        imageOfTruck: \"https://images.unsplash.com/photo-1565097158282-1094bd0fe46a?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTB8fGZvb2QlMjB0cnVja3N8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\",\n                        cuisineType: \"popcorn\",\n                        customerRatings: [4, 5, 2, 2]\n                    }\n            ]\n    }]\n\n    users.map(user => {\n      if(user.trucksOwned) {\n            user.trucksOwned.map((truck, i )=> {\n                let total = 0;\n                truck.customerRatings.forEach(rating => {\n                    total += rating\n                })\n                let avg = total / truck.customerRatings.length //calculate average rating\n                let newTruckObj = {...truck,                    // create new truck obj that includes avgCustomerRatings\n                                    avgCustomerRatings: avg}\n                let newTrucksOwnedArr = user.trucksOwned        // set new array equal to the previous array\n                newTrucksOwnedArr[i] = newTruckObj              // replace element in array with the newtruckobj\n                user.trucksOwned = newTrucksOwnedArr            // update the trucksOwned array\n            })\n        }\n        return (\n            user                                                // return user with the new trucks owned array\n        )  \n    } )\n\n    export default users",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":5,"column":37,"nodeType":"155","messageId":"156","endLine":5,"endColumn":46},{"ruleId":"153","severity":1,"message":"157","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":13},{"ruleId":"153","severity":1,"message":"158","line":27,"column":9,"nodeType":"155","messageId":"156","endLine":27,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":41,"column":6,"nodeType":"161","endLine":41,"endColumn":8,"suggestions":"162"},{"ruleId":"153","severity":1,"message":"163","line":11,"column":10,"nodeType":"155","messageId":"156","endLine":11,"endColumn":23},{"ruleId":"153","severity":1,"message":"164","line":27,"column":10,"nodeType":"155","messageId":"156","endLine":27,"endColumn":21},{"ruleId":"153","severity":1,"message":"165","line":25,"column":12,"nodeType":"155","messageId":"156","endLine":25,"endColumn":17},{"ruleId":"153","severity":1,"message":"166","line":27,"column":12,"nodeType":"155","messageId":"156","endLine":27,"endColumn":22},{"ruleId":"153","severity":1,"message":"167","line":27,"column":24,"nodeType":"155","messageId":"156","endLine":27,"endColumn":37},{"ruleId":"159","severity":1,"message":"168","line":61,"column":8,"nodeType":"161","endLine":61,"endColumn":10,"suggestions":"169"},{"ruleId":"153","severity":1,"message":"170","line":1,"column":39,"nodeType":"155","messageId":"156","endLine":1,"endColumn":48},{"ruleId":"153","severity":1,"message":"171","line":141,"column":54,"nodeType":"155","messageId":"156","endLine":141,"endColumn":69},{"ruleId":"172","severity":1,"message":"173","line":212,"column":24,"nodeType":"174","messageId":"175","endLine":212,"endColumn":26},{"ruleId":"153","severity":1,"message":"170","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"176","line":1,"column":28,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"177","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":13},{"ruleId":"153","severity":1,"message":"163","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":23},{"ruleId":"153","severity":1,"message":"164","line":12,"column":12,"nodeType":"155","messageId":"156","endLine":12,"endColumn":23},{"ruleId":"153","severity":1,"message":"178","line":12,"column":25,"nodeType":"155","messageId":"156","endLine":12,"endColumn":39},{"ruleId":"153","severity":1,"message":"157","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"153","severity":1,"message":"170","line":2,"column":28,"nodeType":"155","messageId":"156","endLine":2,"endColumn":37},{"ruleId":"153","severity":1,"message":"178","line":18,"column":25,"nodeType":"155","messageId":"156","endLine":18,"endColumn":39},{"ruleId":"153","severity":1,"message":"179","line":22,"column":12,"nodeType":"155","messageId":"156","endLine":22,"endColumn":22},{"ruleId":"153","severity":1,"message":"180","line":22,"column":24,"nodeType":"155","messageId":"156","endLine":22,"endColumn":37},{"ruleId":"153","severity":1,"message":"181","line":27,"column":31,"nodeType":"155","messageId":"156","endLine":27,"endColumn":51},{"ruleId":"153","severity":1,"message":"157","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":13},{"ruleId":"153","severity":1,"message":"170","line":3,"column":29,"nodeType":"155","messageId":"156","endLine":3,"endColumn":38},{"ruleId":"153","severity":1,"message":"182","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":23},{"ruleId":"153","severity":1,"message":"164","line":14,"column":11,"nodeType":"155","messageId":"156","endLine":14,"endColumn":22},{"ruleId":"153","severity":1,"message":"183","line":14,"column":24,"nodeType":"155","messageId":"156","endLine":14,"endColumn":36},{"ruleId":"184","severity":1,"message":"185","line":65,"column":7,"nodeType":"186","endLine":65,"endColumn":39},{"ruleId":"187","severity":1,"message":"188","line":76,"column":7,"nodeType":"186","endLine":76,"endColumn":90},{"ruleId":"187","severity":1,"message":"189","line":84,"column":7,"nodeType":"186","endLine":84,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":53,"column":45,"nodeType":"192","messageId":"193","endLine":53,"endColumn":47},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'fetchMenus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'trucks'. Either include it or remove the dependency array.","ArrayExpression",["196"],"'axiosWithAuth' is defined but never used.","'currentUser' is assigned a value but never used.","'menus' is assigned a value but never used.","'avgRatings' is assigned a value but never used.","'setAvgRatings' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchMenus' and 'trucks'. Either include them or remove the dependency array.",["197"],"'useEffect' is defined but never used.","'setCurrentTruck' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'users' is defined but never used.","'setCurrentUser' is assigned a value but never used.","'isDeleting' is assigned a value but never used.","'setIsDeleting' is assigned a value but never used.","'setProfileUserTrucks' is assigned a value but never used.","'TrucksContext' is defined but never used.","'currentTruck' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [trucks]",{"range":"202","text":"203"},"Update the dependencies array to be: [fetchMenus, trucks]",{"range":"204","text":"205"},[1053,1055],"[trucks]",[2063,2065],"[fetchMenus, trucks]"]